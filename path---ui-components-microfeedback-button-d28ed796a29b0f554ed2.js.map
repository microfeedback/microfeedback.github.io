{"version":3,"sources":["webpack:///path---ui-components-microfeedback-button-d28ed796a29b0f554ed2.js","webpack:///./.cache/json/ui-components-microfeedback-button.json"],"names":["webpackJsonp","298","module","exports","data","markdownRemark","html","headings","value","depth","frontmatter","title","fields","sectionList","path","slug","dir","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA;AAAil3CC,WAA68CC,MAAA,aAAAC,MAAA,IAAiCD,MAAA,qBAAAC,MAAA,IAAyCD,MAAA,iBAAAC,MAAA,IAAqCD,MAAA,wBAAAC,MAAA,IAA4CD,MAAA,+BAAAC,MAAA,IAAmDD,MAAA,iCAAAC,MAAA,IAAqDD,MAAA,kBAAAC,MAAA,IAAsCD,MAAA,kCAAAC,MAAA,IAAsDD,MAAA,4BAAAC,MAAA,IAAgDD,MAAA,UAAAC,MAAA,IAA8BD,MAAA,qBAAAC,MAAA,IAAyCD,MAAA,gBAAAC,MAAA,IAAkCC,aAAiBC,MAAA,wBAA+BC,QAAWC,YAAA,kJAA+KC,KAAA,wCAAAC,KAAA,sCAAAC,IAAA,mBAAuHC,aAAgBF,KAAA","file":"path---ui-components-microfeedback-button-d28ed796a29b0f554ed2.js","sourcesContent":["webpackJsonp([266926861237263],{\n\n/***/ 298:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>microfeedback-button adds a configurable feedback button to your website.</p>\\n<h2 id=\\\"quickstart\\\"><a href=\\\"#quickstart\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Quickstart</h2>\\n<p>First, <a href=\\\"/getting-started/deployment\\\">deploy</a> a microfeedback backend, e.g.\\n<a href=\\\"/backends/microfeedback-github\\\">microfeedback-github</a>.</p>\\n<p>Add the following to your site, replacing <code class=\\\"gatsby-code-text\\\">&#39;http://your-backend-url.now.sh/&#39;</code> with your backend’s URL.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"html\\\">\\n      <pre class=\\\"gatsby-code-html\\\"><code class=\\\"gatsby-code-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/microfeedback-button/dist/microfeedback-button.min.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token comment\\\">&lt;!-- Optional: Include a Promise polyfill for IE9+ --></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">href</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://cdn.jsdelivr.net/npm/promise-polyfill@7/dist/polyfill.min.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\">\\n<span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'http://your-backend-url.now.sh/'</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<h2 id=\\\"usage-as-a-package\\\"><a href=\\\"#usage-as-a-package\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Usage as a package</h2>\\n<p>microfeedback-button can also be installed and used as a package.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\">\\n      <pre class=\\\"gatsby-code-text\\\"><code class=\\\"gatsby-code-text\\\">npm install microfeedback-button --save</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token keyword\\\">import</span> microfeedback <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'microfeedback-button'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'http://your-backend-url.now.sh/'</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"default-button\\\"><a href=\\\"#default-button\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Default button</h2>\\n<p>To render the default button (as show in the bottom right), pass no\\noptions to <code class=\\\"gatsby-code-text\\\">microfeedback()</code>:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>If no URL is passed, feedback will only be logged to the console. To\\nsend feedback to your MicroFeedback backend, pass the <code class=\\\"gatsby-code-text\\\">url</code> option:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'http://your-backend-url.now.sh/'</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"binding-to-an-element\\\"><a href=\\\"#binding-to-an-element\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Binding to an element</h2>\\n<p>The feedback dialog can be bound to any element by passing an\\n<code class=\\\"gatsby-code-text\\\">HTMLElement</code> as the first argument:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'custom-button'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Binding to an element'</span><span class=\\\"token punctuation\\\">,</span>\\n  text<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'You can bind a feedback dialog to any element'</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"custom-button\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<h2 id=\\\"customizing-the-input-dialog\\\"><a href=\\\"#customizing-the-input-dialog\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Customizing the input dialog</h2>\\n<p>Dialogs are powered by\\n<a href=\\\"https://sweetalert2.github.io/#configuration\\\">sweetalert2</a>, so all of\\nsweetalert2’s customization options are available to you.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'custom-dialog'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Custom dialog example'</span><span class=\\\"token punctuation\\\">,</span>\\n  text<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'See the sweetalert2 docs for available customization options.'</span><span class=\\\"token punctuation\\\">,</span>\\n  input<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'text'</span><span class=\\\"token punctuation\\\">,</span>\\n  width<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">600</span><span class=\\\"token punctuation\\\">,</span>\\n  placeholder<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"What's on your mind?\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  cancelButtonText<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Discard'</span><span class=\\\"token punctuation\\\">,</span>\\n  confirmButtonText<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Send it!'</span><span class=\\\"token punctuation\\\">,</span>\\n  confirmButtonColor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#41b883'</span><span class=\\\"token punctuation\\\">,</span>\\n  reverseButtons<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"custom-dialog\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<p>You can even create a dialog programmatically using the <code class=\\\"gatsby-code-text\\\">showDialog</code>\\noption.</p>\\n<p><strong>Use <code class=\\\"gatsby-code-text\\\">btn.alert()</code> to display dialogs</strong>. It is equivalent to the\\n<code class=\\\"gatsby-code-text\\\">swal()</code> function from <a href=\\\"https://sweetalert2.github.io/\\\">sweetalert2</a>.\\nMake sure to return its value so that the input can be passed\\nalong to other methods.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'show-dialog'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">showDialog</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> btn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Programmatic dialog example'</span><span class=\\\"token punctuation\\\">,</span>\\n      html<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'You can create a dialog programatically using &lt;code>btn.alert()&lt;/code>.'</span><span class=\\\"token punctuation\\\">,</span>\\n      inputPlaceholder<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'One thing we can do better'</span><span class=\\\"token punctuation\\\">,</span>\\n      input<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'text'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"show-dialog\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<h2 id=\\\"success-message-after-response\\\"><a href=\\\"#success-message-after-response\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Success message after response</h2>\\n<p>By default, the success message will be shown as soon as the user submits their input.\\nSet <code class=\\\"gatsby-code-text\\\">optimistic: false</code> if you want to show the message only after the request to the backend is complete.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'non-optimistic'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Non-optimistic example'</span><span class=\\\"token punctuation\\\">,</span>\\n  text<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'The success dialog will not be displayed until the fake request is finished.'</span><span class=\\\"token punctuation\\\">,</span>\\n  optimistic<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\">// Simulate requests to backend</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">sendRequest</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span>resolve <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"non-optimistic\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<h2 id=\\\"handling-errors\\\"><a href=\\\"#handling-errors\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Handling errors</h2>\\n<p>When <code class=\\\"gatsby-code-text\\\">optimistic</code> is set to <code class=\\\"gatsby-code-text\\\">false</code>, use the <code class=\\\"gatsby-code-text\\\">onFailure()</code> hook to\\nhandle error responses.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'handling-failure'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Handling errors'</span><span class=\\\"token punctuation\\\">,</span>\\n  html<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Use &lt;code>onFailure&lt;/code> to handle errors.'</span><span class=\\\"token punctuation\\\">,</span>\\n  optimistic<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">onFailure</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> btn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Oops'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Something terrible happened!'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'error'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\">// Simulate a failed request</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">sendRequest</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"handling-failure\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<h2 id=\\\"customizing-the-success-message\\\"><a href=\\\"#customizing-the-success-message\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Customizing the success message</h2>\\n<p>Use the <code class=\\\"gatsby-code-text\\\">showSuccessDialog()</code> hook to customize the success message. Again, use <code class=\\\"gatsby-code-text\\\">btn.alert()</code> to display the dialog. Return its value so that the\\ninput will get passed to other methods.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'custom-success'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Success message example'</span><span class=\\\"token punctuation\\\">,</span>\\n  html<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Use &lt;code>showSuccessDialog&lt;/code> to create a custom success dialog.'</span><span class=\\\"token punctuation\\\">,</span>\\n  width<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">600</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">showSuccessDialog</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">,</span> input<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> btn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"❤️ You're amazing!\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      text<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`You wrote: \\\"</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>input<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">\\\"`</span></span><span class=\\\"token punctuation\\\">,</span>\\n      confirmButtonText<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Continue being amazing'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"custom-success\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<p>By default, the message will be shown immediately after the user submits\\ntheir input.</p>\\n<p>If you want to show a custom message based on the response from the\\nbackend, set <code class=\\\"gatsby-code-text\\\">optimistic</code> to <code class=\\\"gatsby-code-text\\\">false</code>. The <code class=\\\"gatsby-code-text\\\">showSuccessDialog()</code> hook\\nwill receive the response as its third argument.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'custom-success-non-optimistic'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Custom success message after response'</span><span class=\\\"token punctuation\\\">,</span>\\n  html<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Use &lt;code>showSuccessDialog&lt;/code> together with &lt;code>optimistic: false&lt;/code> '</span> <span class=\\\"token operator\\\">+</span>\\n        <span class=\\\"token string\\\">'to display a custom message after the request finishes.'</span><span class=\\\"token punctuation\\\">,</span>\\n  width<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">600</span><span class=\\\"token punctuation\\\">,</span>\\n  optimistic<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">showSuccessDialog</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">,</span> input<span class=\\\"token punctuation\\\">,</span> response<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> btn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token string\\\">'Issue posted'</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`You wrote: \\\"</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>input<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">\\\".&lt;br>Your issue number is: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>response<span class=\\\"token punctuation\\\">.</span>result<span class=\\\"token punctuation\\\">.</span>issueNo<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token string\\\">'info'</span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\">// Simulate requests to backend</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">sendRequest</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">,</span> url<span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span>resolve <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n          result<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n            body<span class=\\\"token punctuation\\\">:</span> payload<span class=\\\"token punctuation\\\">.</span>body<span class=\\\"token punctuation\\\">,</span>\\n            issueNo<span class=\\\"token punctuation\\\">:</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">floor</span><span class=\\\"token punctuation\\\">(</span>Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">random</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"custom-success-non-optimistic\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<h2 id=\\\"advanced-multiple-inputs\\\"><a href=\\\"#advanced-multiple-inputs\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Advanced: Multiple inputs</h2>\\n<p>Multiple inputs can be rendered by using the <code class=\\\"gatsby-code-text\\\">html</code> and <code class=\\\"gatsby-code-text\\\">preConfirm</code>\\nparameters of <code class=\\\"gatsby-code-text\\\">btn.alert</code>.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'btn-multi-input'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">showDialog</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> btn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Multiple input example'</span><span class=\\\"token punctuation\\\">,</span>\\n      html<span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token string\\\">'&lt;textarea id=\\\"microfeedback-input\\\" class=\\\"swal2-textarea\\\" style=\\\"display: block;\\\" placeholder=\\\"Describe your issue or share your ideas\\\">&lt;/textarea>'</span> <span class=\\\"token operator\\\">+</span>\\n        <span class=\\\"token string\\\">'&lt;label id=\\\"microfeedback-followup\\\" for=\\\"swal2-checkbox\\\" class=\\\"swal2-checkbox\\\">'</span> <span class=\\\"token operator\\\">+</span>\\n        <span class=\\\"token string\\\">'&lt;input style=\\\"display:block\\\" type=\\\"checkbox\\\"> '</span> <span class=\\\"token operator\\\">+</span>\\n        <span class=\\\"token string\\\">'&lt;span>Contact me about opportunities to improve our product&lt;/span>'</span> <span class=\\\"token operator\\\">+</span>\\n        <span class=\\\"token string\\\">'&lt;/label>'</span><span class=\\\"token punctuation\\\">,</span>\\n      focusConfirm<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token function\\\">preConfirm</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> input <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'microfeedback-input'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> followup <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">querySelectorAll</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'#microfeedback-followup input'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n          input<span class=\\\"token punctuation\\\">:</span> input<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">,</span>\\n          followup<span class=\\\"token punctuation\\\">:</span> followup<span class=\\\"token punctuation\\\">.</span>checked<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      showCancelButton<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n      confirmButtonText<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Send'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">showSuccessDialog</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>input<span class=\\\"token punctuation\\\">,</span> followup<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> text <span class=\\\"token operator\\\">=</span> followup <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'We will contact you soon.'</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'We will not contact you in the future.'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> btn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Thank you for your feedback!'</span><span class=\\\"token punctuation\\\">,</span>\\n      text<span class=\\\"token punctuation\\\">,</span>\\n      type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'success'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">getPayload</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>input<span class=\\\"token punctuation\\\">,</span> followup<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n      body<span class=\\\"token punctuation\\\">:</span> input<span class=\\\"token punctuation\\\">,</span>\\n      extra<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        followup<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"multi-input\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<p>There are a few interesting bits here:</p>\\n<ol>\\n<li>First, we use <code class=\\\"gatsby-code-text\\\">showDialog</code> to programmatically create our custom dialog.</li>\\n<li>We pass <code class=\\\"gatsby-code-text\\\">html</code> to <code class=\\\"gatsby-code-text\\\">btn.alert</code> to specify the HTML content of the dialog.</li>\\n<li><code class=\\\"gatsby-code-text\\\">preConfirm</code> returns the value that will be passed to <code class=\\\"gatsby-code-text\\\">showSuccessDialog</code> and <code class=\\\"gatsby-code-text\\\">getPayload</code>.</li>\\n<li><code class=\\\"gatsby-code-text\\\">showSuccessDialog</code> receives the input values from <code class=\\\"gatsby-code-text\\\">preConfirm</code>. We customize the “Thank you” message based on\\nwhether the user checked the checkbox.</li>\\n<li><code class=\\\"gatsby-code-text\\\">getPayload</code> receives the input values from <code class=\\\"gatsby-code-text\\\">preConfirm</code> and returns the JSON payload that will be sent to the\\nMicroFeedback backend.</li>\\n</ol>\\n<p>This example may seem complicated, but it demonstrates how you have\\nfine-grained control over the UI when you need it.</p>\\n<h2 id=\\\"styling\\\"><a href=\\\"#styling\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Styling</h2>\\n<p>Use <code class=\\\"gatsby-code-text\\\">backgroundColor</code> and <code class=\\\"gatsby-code-text\\\">color</code> to change the color of the button and button text:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  backgroundColor<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'#424b54'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// Button color</span>\\n  color<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#fff'</span><span class=\\\"token punctuation\\\">,</span>  <span class=\\\"token comment\\\">// Button text color</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>You can also style the button in CSS.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"css\\\">\\n      <pre class=\\\"gatsby-code-css\\\"><code class=\\\"gatsby-code-css\\\"><span class=\\\"token selector\\\">.microfeedback-button</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">font-family</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Helvetica Neue'</span> sans-serif<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"styling-the-dialog\\\"><a href=\\\"#styling-the-dialog\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Styling the dialog</h3>\\n<p>See the <a href=\\\"https://sweetalert2.github.io/\\\">sweetalert2 docs</a> for styling\\nthe input dialog.</p>\\n<h2 id=\\\"api-reference\\\"><a href=\\\"#api-reference\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>API reference</h2>\\n<p>See microfeedback-button’s <a href=\\\"https://github.com/MicroFeedback/microfeedback-button\\\">README</a> for a full API reference.</p>\",\"headings\":[{\"value\":\"Quickstart\",\"depth\":2},{\"value\":\"Usage as a package\",\"depth\":2},{\"value\":\"Default button\",\"depth\":2},{\"value\":\"Binding to an element\",\"depth\":2},{\"value\":\"Customizing the input dialog\",\"depth\":2},{\"value\":\"Success message after response\",\"depth\":2},{\"value\":\"Handling errors\",\"depth\":2},{\"value\":\"Customizing the success message\",\"depth\":2},{\"value\":\"Advanced: Multiple inputs\",\"depth\":2},{\"value\":\"Styling\",\"depth\":2},{\"value\":\"Styling the dialog\",\"depth\":3},{\"value\":\"API reference\",\"depth\":2}],\"frontmatter\":{\"title\":\"microfeedback-button\"},\"fields\":{\"sectionList\":\"[{\\\"title\\\":\\\"UI Components\\\",\\\"items\\\":[{\\\"id\\\":\\\"microfeedback-button\\\",\\\"title\\\":\\\"microfeedback-button\\\",\\\"slug\\\":\\\"/ui-components/microfeedback-button\\\"}]}]\",\"path\":\"ui-components/microfeedback-button.md\",\"slug\":\"/ui-components/microfeedback-button\",\"dir\":\"ui-components\"}}},\"pathContext\":{\"slug\":\"/ui-components/microfeedback-button\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---ui-components-microfeedback-button-d28ed796a29b0f554ed2.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>microfeedback-button adds a configurable feedback button to your website.</p>\\n<h2 id=\\\"quickstart\\\"><a href=\\\"#quickstart\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Quickstart</h2>\\n<p>First, <a href=\\\"/getting-started/deployment\\\">deploy</a> a microfeedback backend, e.g.\\n<a href=\\\"/backends/microfeedback-github\\\">microfeedback-github</a>.</p>\\n<p>Add the following to your site, replacing <code class=\\\"gatsby-code-text\\\">&#39;http://your-backend-url.now.sh/&#39;</code> with your backend’s URL.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"html\\\">\\n      <pre class=\\\"gatsby-code-html\\\"><code class=\\\"gatsby-code-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/microfeedback-button/dist/microfeedback-button.min.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token comment\\\">&lt;!-- Optional: Include a Promise polyfill for IE9+ --></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">href</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://cdn.jsdelivr.net/npm/promise-polyfill@7/dist/polyfill.min.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\">\\n<span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'http://your-backend-url.now.sh/'</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<h2 id=\\\"usage-as-a-package\\\"><a href=\\\"#usage-as-a-package\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Usage as a package</h2>\\n<p>microfeedback-button can also be installed and used as a package.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\">\\n      <pre class=\\\"gatsby-code-text\\\"><code class=\\\"gatsby-code-text\\\">npm install microfeedback-button --save</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token keyword\\\">import</span> microfeedback <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'microfeedback-button'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'http://your-backend-url.now.sh/'</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"default-button\\\"><a href=\\\"#default-button\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Default button</h2>\\n<p>To render the default button (as show in the bottom right), pass no\\noptions to <code class=\\\"gatsby-code-text\\\">microfeedback()</code>:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>If no URL is passed, feedback will only be logged to the console. To\\nsend feedback to your MicroFeedback backend, pass the <code class=\\\"gatsby-code-text\\\">url</code> option:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'http://your-backend-url.now.sh/'</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"binding-to-an-element\\\"><a href=\\\"#binding-to-an-element\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Binding to an element</h2>\\n<p>The feedback dialog can be bound to any element by passing an\\n<code class=\\\"gatsby-code-text\\\">HTMLElement</code> as the first argument:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'custom-button'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Binding to an element'</span><span class=\\\"token punctuation\\\">,</span>\\n  text<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'You can bind a feedback dialog to any element'</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"custom-button\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<h2 id=\\\"customizing-the-input-dialog\\\"><a href=\\\"#customizing-the-input-dialog\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Customizing the input dialog</h2>\\n<p>Dialogs are powered by\\n<a href=\\\"https://sweetalert2.github.io/#configuration\\\">sweetalert2</a>, so all of\\nsweetalert2’s customization options are available to you.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'custom-dialog'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Custom dialog example'</span><span class=\\\"token punctuation\\\">,</span>\\n  text<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'See the sweetalert2 docs for available customization options.'</span><span class=\\\"token punctuation\\\">,</span>\\n  input<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'text'</span><span class=\\\"token punctuation\\\">,</span>\\n  width<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">600</span><span class=\\\"token punctuation\\\">,</span>\\n  placeholder<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"What's on your mind?\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  cancelButtonText<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Discard'</span><span class=\\\"token punctuation\\\">,</span>\\n  confirmButtonText<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Send it!'</span><span class=\\\"token punctuation\\\">,</span>\\n  confirmButtonColor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#41b883'</span><span class=\\\"token punctuation\\\">,</span>\\n  reverseButtons<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"custom-dialog\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<p>You can even create a dialog programmatically using the <code class=\\\"gatsby-code-text\\\">showDialog</code>\\noption.</p>\\n<p><strong>Use <code class=\\\"gatsby-code-text\\\">btn.alert()</code> to display dialogs</strong>. It is equivalent to the\\n<code class=\\\"gatsby-code-text\\\">swal()</code> function from <a href=\\\"https://sweetalert2.github.io/\\\">sweetalert2</a>.\\nMake sure to return its value so that the input can be passed\\nalong to other methods.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'show-dialog'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">showDialog</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> btn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Programmatic dialog example'</span><span class=\\\"token punctuation\\\">,</span>\\n      html<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'You can create a dialog programatically using &lt;code>btn.alert()&lt;/code>.'</span><span class=\\\"token punctuation\\\">,</span>\\n      inputPlaceholder<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'One thing we can do better'</span><span class=\\\"token punctuation\\\">,</span>\\n      input<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'text'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"show-dialog\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<h2 id=\\\"success-message-after-response\\\"><a href=\\\"#success-message-after-response\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Success message after response</h2>\\n<p>By default, the success message will be shown as soon as the user submits their input.\\nSet <code class=\\\"gatsby-code-text\\\">optimistic: false</code> if you want to show the message only after the request to the backend is complete.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'non-optimistic'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Non-optimistic example'</span><span class=\\\"token punctuation\\\">,</span>\\n  text<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'The success dialog will not be displayed until the fake request is finished.'</span><span class=\\\"token punctuation\\\">,</span>\\n  optimistic<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\">// Simulate requests to backend</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">sendRequest</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span>resolve <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"non-optimistic\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<h2 id=\\\"handling-errors\\\"><a href=\\\"#handling-errors\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Handling errors</h2>\\n<p>When <code class=\\\"gatsby-code-text\\\">optimistic</code> is set to <code class=\\\"gatsby-code-text\\\">false</code>, use the <code class=\\\"gatsby-code-text\\\">onFailure()</code> hook to\\nhandle error responses.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'handling-failure'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Handling errors'</span><span class=\\\"token punctuation\\\">,</span>\\n  html<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Use &lt;code>onFailure&lt;/code> to handle errors.'</span><span class=\\\"token punctuation\\\">,</span>\\n  optimistic<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">onFailure</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> btn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Oops'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Something terrible happened!'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'error'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\">// Simulate a failed request</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">sendRequest</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"handling-failure\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<h2 id=\\\"customizing-the-success-message\\\"><a href=\\\"#customizing-the-success-message\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Customizing the success message</h2>\\n<p>Use the <code class=\\\"gatsby-code-text\\\">showSuccessDialog()</code> hook to customize the success message. Again, use <code class=\\\"gatsby-code-text\\\">btn.alert()</code> to display the dialog. Return its value so that the\\ninput will get passed to other methods.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'custom-success'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Success message example'</span><span class=\\\"token punctuation\\\">,</span>\\n  html<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Use &lt;code>showSuccessDialog&lt;/code> to create a custom success dialog.'</span><span class=\\\"token punctuation\\\">,</span>\\n  width<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">600</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">showSuccessDialog</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">,</span> input<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> btn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"❤️ You're amazing!\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      text<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`You wrote: \\\"</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>input<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">\\\"`</span></span><span class=\\\"token punctuation\\\">,</span>\\n      confirmButtonText<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Continue being amazing'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"custom-success\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<p>By default, the message will be shown immediately after the user submits\\ntheir input.</p>\\n<p>If you want to show a custom message based on the response from the\\nbackend, set <code class=\\\"gatsby-code-text\\\">optimistic</code> to <code class=\\\"gatsby-code-text\\\">false</code>. The <code class=\\\"gatsby-code-text\\\">showSuccessDialog()</code> hook\\nwill receive the response as its third argument.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'custom-success-non-optimistic'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Custom success message after response'</span><span class=\\\"token punctuation\\\">,</span>\\n  html<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Use &lt;code>showSuccessDialog&lt;/code> together with &lt;code>optimistic: false&lt;/code> '</span> <span class=\\\"token operator\\\">+</span>\\n        <span class=\\\"token string\\\">'to display a custom message after the request finishes.'</span><span class=\\\"token punctuation\\\">,</span>\\n  width<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">600</span><span class=\\\"token punctuation\\\">,</span>\\n  optimistic<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">showSuccessDialog</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">,</span> input<span class=\\\"token punctuation\\\">,</span> response<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> btn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token string\\\">'Issue posted'</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`You wrote: \\\"</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>input<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">\\\".&lt;br>Your issue number is: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>response<span class=\\\"token punctuation\\\">.</span>result<span class=\\\"token punctuation\\\">.</span>issueNo<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token string\\\">'info'</span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\">// Simulate requests to backend</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">sendRequest</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">,</span> url<span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span>resolve <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n          result<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n            body<span class=\\\"token punctuation\\\">:</span> payload<span class=\\\"token punctuation\\\">.</span>body<span class=\\\"token punctuation\\\">,</span>\\n            issueNo<span class=\\\"token punctuation\\\">:</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">floor</span><span class=\\\"token punctuation\\\">(</span>Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">random</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"custom-success-non-optimistic\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<h2 id=\\\"advanced-multiple-inputs\\\"><a href=\\\"#advanced-multiple-inputs\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Advanced: Multiple inputs</h2>\\n<p>Multiple inputs can be rendered by using the <code class=\\\"gatsby-code-text\\\">html</code> and <code class=\\\"gatsby-code-text\\\">preConfirm</code>\\nparameters of <code class=\\\"gatsby-code-text\\\">btn.alert</code>.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'btn-multi-input'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">showDialog</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> btn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Multiple input example'</span><span class=\\\"token punctuation\\\">,</span>\\n      html<span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token string\\\">'&lt;textarea id=\\\"microfeedback-input\\\" class=\\\"swal2-textarea\\\" style=\\\"display: block;\\\" placeholder=\\\"Describe your issue or share your ideas\\\">&lt;/textarea>'</span> <span class=\\\"token operator\\\">+</span>\\n        <span class=\\\"token string\\\">'&lt;label id=\\\"microfeedback-followup\\\" for=\\\"swal2-checkbox\\\" class=\\\"swal2-checkbox\\\">'</span> <span class=\\\"token operator\\\">+</span>\\n        <span class=\\\"token string\\\">'&lt;input style=\\\"display:block\\\" type=\\\"checkbox\\\"> '</span> <span class=\\\"token operator\\\">+</span>\\n        <span class=\\\"token string\\\">'&lt;span>Contact me about opportunities to improve our product&lt;/span>'</span> <span class=\\\"token operator\\\">+</span>\\n        <span class=\\\"token string\\\">'&lt;/label>'</span><span class=\\\"token punctuation\\\">,</span>\\n      focusConfirm<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token function\\\">preConfirm</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> input <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'microfeedback-input'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> followup <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">querySelectorAll</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'#microfeedback-followup input'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n          input<span class=\\\"token punctuation\\\">:</span> input<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">,</span>\\n          followup<span class=\\\"token punctuation\\\">:</span> followup<span class=\\\"token punctuation\\\">.</span>checked<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      showCancelButton<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n      confirmButtonText<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Send'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">showSuccessDialog</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>input<span class=\\\"token punctuation\\\">,</span> followup<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> text <span class=\\\"token operator\\\">=</span> followup <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'We will contact you soon.'</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'We will not contact you in the future.'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> btn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Thank you for your feedback!'</span><span class=\\\"token punctuation\\\">,</span>\\n      text<span class=\\\"token punctuation\\\">,</span>\\n      type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'success'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">getPayload</span><span class=\\\"token punctuation\\\">(</span>btn<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>input<span class=\\\"token punctuation\\\">,</span> followup<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n      body<span class=\\\"token punctuation\\\">:</span> input<span class=\\\"token punctuation\\\">,</span>\\n      extra<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        followup<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><button id=\\\"multi-input\\\" class=\\\"mf-button-preview\\\">Preview</button></p>\\n<p>There are a few interesting bits here:</p>\\n<ol>\\n<li>First, we use <code class=\\\"gatsby-code-text\\\">showDialog</code> to programmatically create our custom dialog.</li>\\n<li>We pass <code class=\\\"gatsby-code-text\\\">html</code> to <code class=\\\"gatsby-code-text\\\">btn.alert</code> to specify the HTML content of the dialog.</li>\\n<li><code class=\\\"gatsby-code-text\\\">preConfirm</code> returns the value that will be passed to <code class=\\\"gatsby-code-text\\\">showSuccessDialog</code> and <code class=\\\"gatsby-code-text\\\">getPayload</code>.</li>\\n<li><code class=\\\"gatsby-code-text\\\">showSuccessDialog</code> receives the input values from <code class=\\\"gatsby-code-text\\\">preConfirm</code>. We customize the “Thank you” message based on\\nwhether the user checked the checkbox.</li>\\n<li><code class=\\\"gatsby-code-text\\\">getPayload</code> receives the input values from <code class=\\\"gatsby-code-text\\\">preConfirm</code> and returns the JSON payload that will be sent to the\\nMicroFeedback backend.</li>\\n</ol>\\n<p>This example may seem complicated, but it demonstrates how you have\\nfine-grained control over the UI when you need it.</p>\\n<h2 id=\\\"styling\\\"><a href=\\\"#styling\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Styling</h2>\\n<p>Use <code class=\\\"gatsby-code-text\\\">backgroundColor</code> and <code class=\\\"gatsby-code-text\\\">color</code> to change the color of the button and button text:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"gatsby-code-javascript\\\"><code class=\\\"gatsby-code-javascript\\\"><span class=\\\"token function\\\">microfeedback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  backgroundColor<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'#424b54'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// Button color</span>\\n  color<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#fff'</span><span class=\\\"token punctuation\\\">,</span>  <span class=\\\"token comment\\\">// Button text color</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>You can also style the button in CSS.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"css\\\">\\n      <pre class=\\\"gatsby-code-css\\\"><code class=\\\"gatsby-code-css\\\"><span class=\\\"token selector\\\">.microfeedback-button</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">font-family</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Helvetica Neue'</span> sans-serif<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"styling-the-dialog\\\"><a href=\\\"#styling-the-dialog\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Styling the dialog</h3>\\n<p>See the <a href=\\\"https://sweetalert2.github.io/\\\">sweetalert2 docs</a> for styling\\nthe input dialog.</p>\\n<h2 id=\\\"api-reference\\\"><a href=\\\"#api-reference\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>API reference</h2>\\n<p>See microfeedback-button’s <a href=\\\"https://github.com/MicroFeedback/microfeedback-button\\\">README</a> for a full API reference.</p>\",\"headings\":[{\"value\":\"Quickstart\",\"depth\":2},{\"value\":\"Usage as a package\",\"depth\":2},{\"value\":\"Default button\",\"depth\":2},{\"value\":\"Binding to an element\",\"depth\":2},{\"value\":\"Customizing the input dialog\",\"depth\":2},{\"value\":\"Success message after response\",\"depth\":2},{\"value\":\"Handling errors\",\"depth\":2},{\"value\":\"Customizing the success message\",\"depth\":2},{\"value\":\"Advanced: Multiple inputs\",\"depth\":2},{\"value\":\"Styling\",\"depth\":2},{\"value\":\"Styling the dialog\",\"depth\":3},{\"value\":\"API reference\",\"depth\":2}],\"frontmatter\":{\"title\":\"microfeedback-button\"},\"fields\":{\"sectionList\":\"[{\\\"title\\\":\\\"UI Components\\\",\\\"items\\\":[{\\\"id\\\":\\\"microfeedback-button\\\",\\\"title\\\":\\\"microfeedback-button\\\",\\\"slug\\\":\\\"/ui-components/microfeedback-button\\\"}]}]\",\"path\":\"ui-components/microfeedback-button.md\",\"slug\":\"/ui-components/microfeedback-button\",\"dir\":\"ui-components\"}}},\"pathContext\":{\"slug\":\"/ui-components/microfeedback-button\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/ui-components-microfeedback-button.json\n// module id = 298\n// module chunks = 266926861237263"],"sourceRoot":""}